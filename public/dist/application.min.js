"use strict";function Instafeed(params){var option,value;if(this.options={user_id:"USER_ID",access_token:"ACCESS_TOKEN"},"object"==typeof params)for(option in params)value=params[option],this.options[option]=value}var ApplicationConfiguration=function(){var applicationModuleName="carolyne-billings-yoga",applicationModuleVendorDependencies=["ui.router","ngResource","ngSanitize","ui.bootstrap"],registerModule=function(moduleName){angular.module(moduleName,[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("users"),ApplicationConfiguration.registerModule("core"),angular.module("core").config(["$stateProvider","$urlRouterProvider","$locationProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("offerings",{url:"/offerings",templateUrl:"modules/core/views/offerings.client.view.html",controller:"OfferingsController"}).state("corporate",{url:"/offerings/corporate",templateUrl:"modules/core/views/corporate.client.view.html",controller:"CorporateController as corporate"}).state("private",{url:"/offerings/private",templateUrl:"modules/core/views/private.client.view.html",controller:"PrivateController as private"}).state("contact",{url:"/contact",templateUrl:"modules/core/views/contact.client.view.html",controller:"ContactController"}).state("doterra",{url:"/doterra",templateUrl:"modules/core/views/doterra.client.view.html",controller:"DoterraController"}).state("about",{url:"/about",templateUrl:"modules/core/views/about.client.view.html",controller:"AboutController"}).state("practice",{url:"/practice",templateUrl:"modules/core/views/practice.client.view.html",controller:"PracticeController"}).state("Home",{url:"/",templateUrl:"modules/core/views/home.client.view.html",controller:"HomeController as home"})}]).run(["$rootScope","$state",function($rootScope){$rootScope.$on("$stateChangeSuccess",function(){document.body.scrollTop=0})}]),angular.module("core").controller("AboutController",["$scope",function(){}]),angular.module("core").controller("ClassesController",["$scope",function($scope){$scope.initialize=window.initialize;var google=window.google;$scope.initialize=function(canvas,long,lat){var mapCanvas=document.getElementById(canvas),mapOptions={center:new google.maps.LatLng(long,lat),zoom:8,mapTypeId:google.maps.MapTypeId.ROADMAP},map=new google.maps.Map(mapCanvas,mapOptions);map.set("styles",[{featureType:"landscape",elementType:"geometry",stylers:[{hue:"#ffff00"},{gamma:1.4},{saturation:82},{lightness:96}]}])},$scope.initialize("endorphin",44.5403,-78.5463),$scope.initialize("puravida",44.5403,-78.5463)}]),angular.module("core").controller("ContactController",["$scope","ValidationService","Contact",function($scope,ValidationService,Contact){Contact.then(function(response){$scope.fields=response.fields,console.log($scope.fields)})}]),angular.module("core").controller("CorporatePrivateController",["$scope",function(){}]),angular.module("core").controller("CorporateController",function(){}),angular.module("core").controller("DoterraController",["$scope",function(){}]),angular.module("core").controller("FooterController",["$scope",function(){window.feed=new window.Instafeed({user_id:"205077230",access_token:"205077230.5b9e1e6.bc0cf67e7bda4e9d8ca4410caa691bcf"}),window.feed._run()}]),angular.module("core").controller("HeaderController",["$scope","Menus",function($scope,Menus){$scope.init=function(){$scope.isCollapsed=!1,Menus.addMenu("topbar"),Menus.addMenuItem("topbar","Practice","practice","practice","practice","practice"),Menus.addMenuItem("topbar","Offerings","offerings","offerings","offerings","offerings"),Menus.addMenuItem("topbar","About","about","about","about","about"),Menus.addMenuItem("topbar","Contact","contact","contact","contact","contact"),$scope.menu=Menus.getMenu("topbar")},$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",function(){}),angular.module("core").controller("OfferingsController",["$scope",function(){}]),angular.module("core").controller("PracticeController",["$scope",function($scope){$scope.initialize=window.initialize;var google=window.google;$scope.initialize=function(canvas,long,lat){var mapCanvas=document.getElementById(canvas),myLatlng=new google.maps.LatLng(long,lat),mapOptions={center:myLatlng,zoom:15,mapTypeId:google.maps.MapTypeId.ROADMAP},map=new google.maps.Map(mapCanvas,mapOptions);map.set("styles",[{featureType:"landscape",elementType:"geometry",stylers:[{hue:"#ffff00"},{gamma:1.4},{saturation:82},{lightness:96}]}]);new google.maps.Marker({position:myLatlng,map:map})},$scope.initialize("parkhill-endorphin",39.7497516,-104.9173012),$scope.initialize("citypark-endorphin",39.7400787,-104.9498906)}]),angular.module("core").controller("PrivateController",function(){}),angular.module("core").factory("ValidationService",function(){return{validate:function(fields,errors){return fields.filter(function(field){delete field.error,field.error=errors.hasOwnProperty(field.name)?errors[field.name][0]:null}),fields}}}),angular.module("core").factory("About",[function(){return{someMethod:function(){return!0}}}]),angular.module("core").factory("Classes",[function(){return{someMethod:function(){return!0}}}]),angular.module("core").factory("Contact",["$resource",function($resource){return $resource("contact/form").get().$promise}]),angular.module("core").factory("CorporatePrivate",[function(){return{someMethod:function(){return!0}}}]),angular.module("core").factory("Doterra",[function(){return{someMethod:function(){return!0}}}]),angular.module("core").factory("Forms",["$resource",function($resource){return $resource("/email",{},{})}]);var Instafeed,root;Instafeed.prototype._urlBuilder=function(){var accessToken,baseUrl,callback,count,media,user;baseUrl="https://api.instagram.com/",user="v1/users/"+this.options.user_id,media="/media/recent/",accessToken="?access_token="+this.options.access_token,count="&count=8",callback="&callback=feed._feed",this.script=""+baseUrl+user+media+accessToken+count+callback},Instafeed.prototype._buildScript=function(){var instaScript;instaScript=document.createElement("script"),instaScript.src=this.script,document.getElementsByTagName("head")[0].appendChild(instaScript)},Instafeed.prototype._feed=function(response){var section,d,a,img,result,_i,_len,_ref,_results;if("object"!=typeof response){if(null!==this.options.error&&"function"==typeof this.options.error)return this.options.error.call(this,"Invalid JSON data"),!1;throw new Error("Invalid JSON response")}if(200!==response.meta.code){if(null!==this.options.error&&"function"==typeof this.options.error)return this.options.error.call(this,response.meta.error_message),!1;throw new Error("Error from Instagram: "+response.meta.error_message)}if(0===response.data.length){if(null!==this.options.error&&"function"==typeof this.options.error)return this.options.error.call(this,"No images were returned from Instagram"),!1;throw new Error("No images were returned from Instagram")}for(_ref=response.data,_results=[],section=document.querySelector(".instagram"),_i=0,_len=_ref.length;_len>_i;_i++)result=_ref[_i],d=document.createElement("div"),d.className="col-xs-3",a=document.createElement("a"),a.href=result.images.standard_resolution.url,img=document.createElement("img"),img.src=result.images.low_resolution.url,a.appendChild(img),d.appendChild(a),_results.push(section.appendChild(d));return _results},Instafeed.prototype._run=function(){if("string"!=typeof this.options.user_id)throw new Error("your need to enter a user id");if("string"!=typeof this.options.access_token)throw new Error("your need to enter a access token");this._urlBuilder(),this._buildScript()},root="undefined"!=typeof exports&&null!==exports?exports:window,root.Instafeed=Instafeed,angular.module("core").service("Menus",[function(){this.defaultRoles=["user"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:isPublic||this.menus[menuId].isPublic,roles:roles||this.defaultRoles,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]}}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/signin.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http.delete("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",[function(){var _this=this;return _this._data={user:window.user},_this._data}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);